
// React component to Send signless transaction

import { useState } from 'react';
import { usePrepareProgramTransaction, useProgram } from '@gear-js/react-hooks';
import { usePrepareEzTransactionParams } from 'gear-ez-transactions';
import { useSignAndSend } from '@/hooks/use-sign-and-send';

export const ExampleSendTransaction = () => {
  const program = useProgram();

  const { prepareTransactionAsync } = usePrepareProgramTransaction({
    program,
    serviceName: 'battle',
    functionName: 'exampleFunction',
  });

  const { prepareEzTransactionParams } = usePrepareEzTransactionParams();
  const { signAndSend } = useSignAndSend();

  const [loading, setLoading] = useState(false);

  const handleSend = async () => {
    setLoading(true);

    const { sessionForAccount, ...params } = await prepareEzTransactionParams();

    const { transaction } = await prepareTransactionAsync({
      args: ['param1', sessionForAccount],
      value: 0n,
      ...params,
    });

    await signAndSend(transaction, {
      onSuccess: () => {
        console.log('‚úÖ Sent successfully');
        setLoading(false);
      },
      onError: () => {
        console.log('‚ùå Failed to send');
        setLoading(false);
      },
    });
  };

  return (
    <div style={styles.container}>
      <button onClick={handleSend} disabled={loading} style={styles.button}>
        {loading ? 'Sending...' : 'Send Example Tx'}
      </button>

      {loading && (
        <div style={styles.overlay}>
          <div style={styles.spinner}></div>
          <p style={styles.text}>Processing transaction...</p>
        </div>
      )}
    </div>
  );
};

// üé® Inline CSS styles
const styles: { [key: string]: React.CSSProperties } = {
  container: {
    position: 'relative',
    display: 'flex',
    justifyContent: 'center',
    padding: '2rem',
  },
  button: {
    padding: '0.75rem 1.5rem',
    backgroundColor: '#1e40af',
    color: 'white',
    border: 'none',
    borderRadius: '8px',
    fontSize: '1rem',
    cursor: 'pointer',
  },
  overlay: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    backgroundColor: 'rgba(0,0,0,0.6)',
    display: 'flex',
    flexDirection: 'column' as const,
    justifyContent: 'center',
    alignItems: 'center',
    borderRadius: '10px',
  },
  spinner: {
    width: '40px',
    height: '40px',
    border: '4px solid #fff',
    borderTop: '4px solid #3b82f6',
    borderRadius: '50%',
    animation: 'spin 1s linear infinite',
  },
  text: {
    color: 'white',
    marginTop: '1rem',
    fontSize: '1rem',
  },
};

// üåÄ Keyframe for spinner (must be global)
const styleSheet = document.createElement('style');
styleSheet.innerHTML = `
@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}`;
document.head.appendChild(styleSheet);
